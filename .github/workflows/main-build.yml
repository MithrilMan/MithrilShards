name: Main Build

on:
  workflow_dispatch:
    inputs:
      run-test:
        description: specify if test has to be run
        required: true
        default: 'true'
      create-packages:
        description: specify if packages have to be built
        required: true
        default: 'true'
  pull_request:
  issues:
  push:
    branches:
      - master
    paths:
      - '*'
      - '!/Documentation/*' # Don't run workflow when files are only in the /Documentation directory

jobs:
  set_variables:
    runs-on: 'ubuntu-latest'
    env:
      DEFAULT_DO_TEST: 'true'
      DEFAULT_DO_PACK: 'true'
    outputs:
      DO_TEST: ${{ steps.DO_TEST.outputs.value }}
      DO_PACK: ${{ steps.DO_PACK.outputs.value }}
    steps:
    - name: Set DO_TEST
      uses: haya14busa/action-cond@v1
      id: DO_TEST
      with:
        cond: ${{ github.event_name == 'workflow_dispatch' }}
        if_true: ${{ github.event.inputs.run-test }}
        if_false: ${{ env.DEFAULT_DO_TEST }}
    - name: Set DO_PACK
      uses: haya14busa/action-cond@v1
      id: DO_PACK
      with:
        cond: ${{ github.event_name == 'workflow_dispatch' }}
        if_true: ${{ github.event.inputs.create-packages }}
        if_false: ${{ env.DEFAULT_DO_PACK }}
    - name: Dump Variables # for debug purpose
      run: |
         echo "DO_TEST = ${{ steps.DO_TEST.outputs.value }}"
         echo "DO_PACK = ${{ steps.DO_PACK.outputs.value }}"

  build:
    needs: set_variables
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.201'

    - name: dotnet Restore
      run: dotnet restore -s "https://api.nuget.org/v3/index.json" -s "https://f.feedz.io/davidfowl/bedrockframework/nuget/index.json"

    - name: Build with dotnet
      run: dotnet build --configuration Release /p:CI=true

    - name: Perform Tests
      if: needs.set_variables.outputs.DO_TEST == 'true'
      run: dotnet test -c Release --logger GitHubActions /p:CI=true

    - name: .NET Lib Pack
      if: matrix.os == 'ubuntu-latest' && needs.set_variables.outputs.DO_PACK == 'true'
      run: dotnet pack --no-build -c Release /p:PackageOutputPath=${{ github.workspace }}\.nupkgs /p:CI=true

    - name: Upload Artifacts
      if: matrix.os == 'ubuntu-latest' && needs.set_variables.outputs.DO_PACK == 'true'
      uses: actions/upload-artifact@v2
      with:
         name: mithril-shards-nuget-package
         path: ${{ github.workspace }}\.nupkgs
         if-no-files-found: error